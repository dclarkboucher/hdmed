M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_spcma(A, M, Y, n_pc = 3, sims = 10, per_jump = 0.9)
out$effects
any(unlist(out$loadings) == 0)
out <- mediate_spcma(A, M, Y, n_pc = 3, sims = 10, per_jump = 0.8)
out$effects
any(unlist(out$loadings) == 0)
library(bama)
?bama
rm(list=ls())
load("data/med_dat.rda")
source("R/bslmm.R")
library(bama)
rm(list=ls())
load("data/med_dat.rda")
source("R/bslmm.R")
library(bama)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
rm(list=ls())
load("data/med_dat.rda")
source("R/bslmm.R")
library(bama)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
View(mediate_bslmm)
out <- mediate_bslmm(A, M, Y, burnin = 500, ndraws = 50)
?bama
Y <- bama.data$y
A <- bama.data$a
# grab the mediators from the example data.frame
M <- as.matrix(bama.data[, paste0("m", 1:100)], nrow(bama.data))
# We just include the intercept term in this example as we have no covariates
C1 <- matrix(1, 1000, 1)
C2 <- matrix(1, 1000, 1)
beta.m  <- rep(0, 100)
alpha.a <- rep(0, 100)
out <- bama(Y = Y, A = A, M = M, C1 = C1, C2 = C2, method = "BSLMM", seed = 1234,
burnin = 100, ndraws = 110, weights = NULL, inits = NULL,
control = list(k = 2, lm0 = 1e-04, lm1 = 1, lma1 = 1, l = 1))
rm(list=ls())
load("data/med_dat.rda")
source("R/bslmm.R")
library(bama)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_bslmm(A, M, Y, burnin = 500, ndraws = 50)
rm(list=ls())
load("data/med_dat.rda")
source("R/bslmm.R")
library(bama)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_bslmm(A, M, Y, burnin = 500, ndraws = 50)
out$contributions
rm(list=ls())
load("data/med_dat.rda")
source("R/bslmm.R")
library(bama)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_bslmm(A, M, Y, burnin = 500, ndraws = 50)
head(out$contributions)
out$effects
rm(list=ls())
load("data/med_dat.rda")
source("R/bslmm.R")
library(bama)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_bslmm(A, M, Y, burnin = 500, ndraws = 50)
out <- mediate_bslmm(A, M, Y, burnin = 100, ndraws = 10)
out$effects
head(out$contributions)
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
z <- 1:100
x <- 1
z %*% x
rm(list=ls())
source("C:/Users/dc48b/Dropbox (Personal)/GSRA Fall 2021/hdmediation/utils/plasso_functions.R")
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
source("C:/Users/dc48b/Dropbox (Personal)/GSRA Fall 2021/hdmediation/utils/plasso_functions.R")
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
rm(list=ls())
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
head(out$all_fits$lambda1)
head(out$all_fits$lambda2)
out1 <- mediate_plasso(A, M, Y, lambdas = c(10^-3, 10^-2),
select_lambda = T)
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-4,10^-3, 10^-2))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-3, 10^-2))
head(out$all_fits$lambda1)
head(out$all_fits$lambda2)
out <- mediate_plasso(A, M, Y, lambdas = c(10^-2))
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-2))
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-2))
x <- matrix(1,5,1)
x
x[,1]
x[1]
as.matrix(x[,T])
x * x
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-2))
head(out$all_fits$lambda1)
str(out)
out1 <- mediate_plasso(A, M, Y, lambdas = c(10^-3, 10^-2),
select_lambda = T)
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-2))
head(out$all_fits$lambda1)
rm(list=ls())
load("data/med_dat.rda")
source("R/pathway_lasso.R")
source("R/pathway_lasso_utils.R")
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_plasso(A, M, Y, lambdas = c(10^-2))
head(out$all_fits$lambda1)
out1 <- mediate_plasso(A, M, Y, lambdas = c(10^-3, 10^-2),
select_lambda = T)
out1 <- mediate_plasso(A, M, Y, lambdas = c(10^-3, 10^-2),
select_lambda = T, vss_rep = 3)
out1$all_fits$lambda1
out1$all_fits$lambda1 |> head()
out1$all_fits$lambda2 |> head()
out1$lambdas
out1$chosen_lambda
out1$chosen_fit |> head()
out1$vss
?data
data("med_dat")
rm(list=ls())
data("med_dat")
data("mtcars")
rm(list=ls())
data(med_dat)
#LVMA example
library(psych)
library(Matrix)
rm(list=ls())
load("data/med_dat.rda")
source("R/lvma.R")
source("R/lvma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
#LVMA example
library(psych)
library(Matrix)
rm(list=ls())
load("data/med_dat.rda")
source("R/lvma.R")
source("R/lvma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
# inputs
rhoLM = 2
rhoEL = 2
rhoLY = 2
q <- 4
#LVMA example
library(psych)
library(Matrix)
rm(list=ls())
load("data/med_dat.rda")
source("R/lvma.R")
source("R/lvma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
# inputs
rhoLM = 2
rhoEL = 2
rhoLY = 2
q <- 4
out <- mediate_lvma(A, M, Y, q = 4, rhoLM = 2, rhoEL = 2, rhoLY = 2, imax = 50)
rm(list=ls())
load("data/med_dat.rda")
source("R/lvma.R")
source("R/lvma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
# inputs
rhoLM = 2
rhoEL = 2
rhoLY = 2
q <- 4
out <- mediate_lvma(A, M, Y, q = 4, rhoLM = 2, rhoEL = 2, rhoLY = 2, imax = 50)
#LVMA example
library(psych)
library(Matrix)
rm(list=ls())
load("data/med_dat.rda")
source("R/lvma.R")
source("R/lvma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
# inputs
rhoLM = 2
rhoEL = 2
rhoLY = 2
q <- 4
out <- mediate_lvma(A, M, Y, q = 4, rhoLM = 2, rhoEL = 2, rhoLY = 2, imax = 50)
#LVMA example
library(psych)
library(Matrix)
rm(list=ls())
load("data/med_dat.rda")
source("R/lvma.R")
source("R/lvma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
# inputs
rhoLM = 2
rhoEL = 2
rhoLY = 2
q <- 4
out <- mediate_lvma(A, M, Y, q = 4, rhoLM = 2, rhoEL = 2, rhoLY = 2, imax = 50)
?ncol
#LVMA example
library(psych)
library(Matrix)
rm(list=ls())
load("data/med_dat.rda")
source("R/lvma.R")
source("R/lvma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
# inputs
rhoLM = 2
rhoEL = 2
rhoLY = 2
q <- 4
out <- mediate_lvma(A, M, Y, q = 4, rhoLM = 2, rhoEL = 2, rhoLY = 2, imax = 50)
out$EBIC_out
#LVMA example
library(psych)
library(Matrix)
rm(list=ls())
load("data/med_dat.rda")
source("R/lvma.R")
source("R/lvma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
# inputs
rhoLM = 2
rhoEL = 2
rhoLY = 2
q <- 4
out <- mediate_lvma(A, M, Y, q = 4, rhoLM = 2, rhoEL = 2, rhoLY = 2, imax = 50)
#LVMA example
library(psych)
library(Matrix)
rm(list=ls())
load("data/med_dat.rda")
source("R/lvma.R")
source("R/lvma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
# inputs
rhoLM = 2
rhoEL = 2
rhoLY = 2
q <- 4
out <- mediate_lvma(A, M, Y, q = 4, rhoLM = 2, rhoEL = 2, rhoLY = 2, imax = 50)
table(out$EBIC_out$mediator_active)
library(Matrix)
rm(list=ls())
load("data/med_dat.rda")
source("R/lvma.R")
#LVMA example
library(psych)
library(Matrix)
rm(list=ls())
load("data/med_dat.rda")
source("R/lvma.R")
source("R/lvma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
# inputs
rhoLM = 2
rhoEL = 2
rhoLY = 2
q <- 4
out <- mediate_lvma(A, M, Y, q = 4, rhoLM = 2, rhoEL = 2, rhoLY = 2, imax = 50)
table(out$EBIC_out$mediator_active)
dim(M)
# HILMA example
rm(list=ls())
load("data/med_dat.rda")
# HILMA example
rm(list=ls())
load("data/med_dat.rda")
source("R/hilma.R")
source("R/hilma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
out <- mediate_hilma(A, M, Y)
library(hilma)
library(freebird)
# HILMA example
rm(list=ls())
load("data/med_dat.rda")
source("R/hilma.R")
source("R/hilma_utils.R")
str(med_dat)
A <- with(med_dat, as.numeric(scale(A)))
M <- with(med_dat, as.matrix(scale(M)))
Y <- with(med_dat, as.numeric(scale(Y)))
library(freebird)
out <- mediate_hilma(A, M, Y)
out
out <- mediate_hilma(A, M, Y, nlambda = 5, aic_tuning = T)
out$a1
?rnorm
A1 <- cbind(A, rnorm(100))
colnames(A1) <- paste0("c",1:2)
A1 <- cbind(A, rnorm(100))
colnames(A1) <- paste0("c",1:2)
out <- mediate_hilma(A1, M, Y, nlambda = 5, aic_tuning = T)
out$c1
out$c2
?bama
library(bama)
library(HIMA)
?hima
devtools::document()
devtools::document()
warnings()
devtools::document()
warnings()
warnings()
devtools::document()
warnings()
library(genlasso)
devtools::document()
warnings()
?gcdnet
data(FHT)
# 1. solution paths for the LASSO penalized least squares.
# To use LASSO set lambda2 = 0.
m1 <- gcdnet(x = FHT$x, y = FHT$y_reg, lambda2 = 0, method = "ls")
library(gcdnet)
data(FHT)
# 1. solution paths for the LASSO penalized least squares.
# To use LASSO set lambda2 = 0.
m1 <- gcdnet(x = FHT$x, y = FHT$y_reg, lambda2 = 0, method = "ls")
plot(m1)
coeffients(m1)
?coef
coef(m1)
coefficients(m1)
gcdnet::coefficients(m1)
devtools::document()
devtools::document()
devtools::document()
warnings()
?psych::mediate
?mediation::mediate
devtools::document()
rm(list=ls())
source("C:/Users/dc48b/Dropbox (Personal)/GSRA Fall 2021/mediation_package/MultiMed/R/lvma_utils.R")
?varimax
?Matrix::head
?Matrix::head()
?head
source("C:/Users/dc48b/Dropbox (Personal)/GSRA Fall 2021/mediation_package/MultiMed/R/lvma_utils.R")
